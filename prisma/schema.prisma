// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  username         String    @unique
  phone            String    @unique
  email            String    @unique
  password         String
  payments         Payment[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  isAdmin          Boolean   @default(false)
  Token            Token[]
  Post             Post[]
  verificationCode Int?
  isVerified       Boolean   @default(false)
  resetToken       String?
  resetTokenExpiry DateTime?
}

model Farmer {
  id        String   @id @default(uuid())
  username  String   @unique
  phone     String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id                 String    @id @default(uuid())
  packageName        String    @db.VarChar(255)
  belogsToId         String?
  belongsTo          User?     @relation(fields: [belogsToId], references: [id])
  amount             Int?
  expiresAt          DateTime?
  subscribedAt       DateTime  @default(now())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime? @updatedAt
  Package            Package?  @relation(fields: [packageId], references: [id])
  packageId          String?
  stripeClientSecret String?
}

model Package {
  id         String    @id @default(uuid())
  name       String?   @unique
  price      Int?
  timePeriod Int?
  payments   Payment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

model Token {
  id    String  @id @default(uuid())
  value String? @unique

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Post {
  id        String   @id @default(uuid())
  title     String?
  published Boolean? @default(true)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
}

model Posts {
  id        String   @id @default(uuid())
  title     String?
  published Boolean? @default(true)
  // authorId  String
  // author    User     @relation(fields: [authorId], references: [id])
}

model Input {
  id          String  @id @default(uuid())
  n           Float?
  p           Float?
  k           Float?
  ph          Float?
  rainfall    Float?
  wind        Float?
  temperature Float?
  humidity    Float?
  crop        String?
}
